
Windows开发环境搭建
==================================================


Windows环境下实验用到的工具
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1）VSCode
------------------------------ 
Visual Studio Code 是一款功能强大的代码编辑器, 适用于几乎任何语言并可在任何操作系统上运行。通过 VSCode 的强大扩展库，我们可以在 VSCode 上一站式创建，编辑，构建，运行和调试远程主机上的工程文件，就像使用 Code::Blocks 操作本地工程一样。

在https://code.visualstudio.com/ 下载并在物理机上安装 VSCode 软件。

2）npcap
------------------------------ 
npcap是一个网络数据包抓包工具，它是WinPcap的改进版，支持WIndows平台的回环数据包采集和发送。

npcap下载地址：
https://npcap.com/#download

.. note:: 
   npcap版本必须大于1.0

3）gcc
------------------------------ 
推荐大家安装tdm-gcc，tdm-gcc是一个Windows编译器套件，包括gcc、g++等，工具比较齐全。

tdm64-gcc下载地址：
https://github.com/jmeubank/tdm-gcc/releases/download/v10.3.0-tdm64-2/tdm64-gcc-10.3.0-2.exe

Windows下编译和调试
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
打开VSCode软件，在左侧边栏的扩展商店搜索并安装以下扩展：

1. Chinese (Simplified) Language Pack for Visual Studio Code
#. C/C++
#. CMake Tools

安装完成后重启VSCode。

点击打开文件夹打开工程目录后即可进行代码操作（ **确保CMakeLists.txt处于当前根目录中** ）。

.. image:: vscode2.png
   :scale: 50 %

在配置好VSCode环境之后，即可使用CMake工具栏完成编译和调试操作，点击工具栏中的Configure All Projects按钮对当前工程进行配置，然后点击build all Projects按钮进行编译。

.. image:: vscode1.png
   :scale: 50 %

首次配置会弹出选择编译工具的提示，选择带有GCC的选项。需要在安装tdm-gcc后才能找到GCC的选项，如果安装tdm-gcc后没有显示该选项，点击[Scan for kits] Search for compilers on this computer，搜索gcc（如果还是没有找到，建议重启电脑）。

.. image:: vscode3.png

编译完成后，可以在代码行前增加断点，然后在可执行文件main.exe图标旁边点击右键，选择“调试”，接下来，就可以愉快地进行暂停、单步跳过、单步调试、单步跳出、重启、停止等这些调试操作了。

.. image:: vscode4.png

.. hint:: 
   在调试之前，必须修改include/config.h头文件中的NET_IF_IP宏定义，即需要自定义网卡的IP地址。该IP地址的网络地址必须与你自己电脑中真实网卡的网络地址一致（也就是和真实网卡处于同一个网段内）。

.. image:: vscode5.png   
